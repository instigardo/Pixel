var toastMessage = [{"title":"Selvan shared a file","message":"Selvan shared 'Contact.docx' file with you!"},
                    {"title":"Himashu shared a file","message":"Himashu shared 'download.docx' file with you!"},
                    {"title":"ishu shared a file","message":"ishu shared 'idw_contract.docx' file with you!"},
                    {"title":"Prakash shared a file","message":"Prakash shared 'ip-access.xlsx' file with you!"},
                    {"title":"Siby shared a file","message":"Siby shared 'revenue-details.xlsx' file with you!"},
                    {"title":"Akash shared a file","message":"Akash shared 'circuit.pdf' file with you!"},
                    {"title":"Kumar shared a file","message":"Kumar shared 'Contact.docx' file with you!"},
                    {"title":"Sathish shared a file","message":"Sathish shared 'Contact.docx' file with you!"}
                    ];

var toastWarningMessage = [{"message":"File is not yet committed!"},
                           {"message":"Folder is created but not committed!"},
                           {"message":"File 'revenue=details.docs' modifed but not committed"},
                           {"message":"File is not yet committed!"},
                           {"message":"Folder is created but not committed!"},
                           {"message":"File 'revenue=details.docs' modifed but not committed"}
                    ];
/*
$(document).on('click', '.browse', function(){
  var file = $(this).parent().parent().parent().find('.file');
  file.trigger('click');
});
*/

/*
$(document).on('change', '.file', function(){
	
  $(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
  
});
*/


init.push(function () {
	
	$('#page-alerts-demo').on('click', 'button', function () {
		var $this = $(this);
		// Go to the top
		$('html,body').animate({ scrollTop: 0 }, 500);
		// Wait while page is scrolling
		setTimeout(function () {
			if ($this.hasClass('page-alerts-clear-btn')) {
				PixelAdmin.plugins.alerts.clear(
					true, // animate
					'pa_page_alerts_default' // namespace
				);
			} else {
				var options = {
					type: $this.attr('data-type'),
					namespace: 'pa_page_alerts_default'
				};
				if ($this.hasClass('auto-close-alert'))
					options['auto_close'] = 3; // seconds
				PixelAdmin.plugins.alerts.add($this.attr('data-text'), options);
			}
		}, 800);
	});
	
	
	$('#divCreate ul.dropdown-menu a').not('#linkCreateFolder').on('click', function() {
		var $modal  = $('#divCreateDoc');
		$modal.find('> div').addClass('modal-dialog modal-sm animated ' + $('#uidemo-modals-effects-select').find(":selected").attr('value'));
		$modal.modal('show');
	});
	
	
	$("#dropzonejs-example").dropzone({
		url: "//dummy.html",
		paramName: "file", // The name that will be used to transfer the file
		maxFilesize: 0.5, // MB

		addRemoveLinks : true,
		dictResponseError: "Can't upload file!",
		autoProcessQueue: false,
		thumbnailWidth: 138,
		thumbnailHeight: 120,

		previewTemplate: '<div class="dz-preview dz-file-preview"><div class="dz-details"><div class="dz-filename"><span data-dz-name></span></div><div class="dz-size">File size: <span data-dz-size></span></div><div class="dz-thumbnail-wrapper"><div class="dz-thumbnail"><img data-dz-thumbnail><span class="dz-nopreview">No preview</span><div class="dz-success-mark"><i class="fa fa-check-circle-o"></i></div><div class="dz-error-mark"><i class="fa fa-times-circle-o"></i></div><div class="dz-error-message"><span data-dz-errormessage></span></div></div></div></div><div class="progress progress-striped active"><div class="progress-bar progress-bar-success" data-dz-uploadprogress></div></div></div>',

		resize: function(file) {
			var info = { srcX: 0, srcY: 0, srcWidth: file.width, srcHeight: file.height },
				srcRatio = file.width / file.height;
			if (file.height > this.options.thumbnailHeight || file.width > this.options.thumbnailWidth) {
				info.trgHeight = this.options.thumbnailHeight;
				info.trgWidth = info.trgHeight * srcRatio;
				if (info.trgWidth > this.options.thumbnailWidth) {
					info.trgWidth = this.options.thumbnailWidth;
					info.trgHeight = info.trgWidth / srcRatio;
				}
			} else {
				info.trgHeight = file.height;
				info.trgWidth = file.width;
			}
			return info;
		}
	});
	
	/*$('#jq-growl-small').click(function () {
		$.growl({ title: "Growl", message: "The kitten is awake!", size: 'small' });
	});
	*/
	

	window.setInterval(function(){
		var index = Math.floor(Math.random() * toastMessage.length);
		traceErr("toastMessage index " + index);
		$.growl({ title: toastMessage[index]["title"], message: toastMessage[index]["message"], size: 'medium' });
	},11000);
	
	window.setInterval(function(){
		var index2 = Math.floor(Math.random() * toastWarningMessage.length);
		traceErr("toastWarningMessage index " + index2);
		$.growl.warning({ message: toastWarningMessage[index2]["message"] });
	},17000);
	
	
	/*
	var self = this;
	$('#page-breadcrumb-demo-btn').on('click', function () {
		var $b = $('#page-breadcrumb-demo');
		if ($b.is(':visible')) {
			$b.css('display', 'none');
			$(this).text('Add page breadcrumb');
		} else {
			// Display breadcrumb after alerts
			var $cont = $('#' + self.plugins.alerts.getContainerId());
			if ($cont.length) {
				$cont.after($b);
			} else {
				$('#content-wrapper').prepend($b);
			}
			$b.css('display', 'block');
			$(this).text('Remove page breadcrumb');
			$('html,body').animate({ scrollTop: 0 }, 500);
		}
	});
	*/
	
});

function getDocs(){
	$('#tblDocs').bootstrapTable({
	    url: 'getDocs.jsp?path='+_path,
	    pagination : true,
	    sortable : true,
	    columns: [
					{"field": "type",			"title": "ico-type"},
					{"field": "id",				"title": "sno"},
					{"field": "name",			"title": "Name"},
					{"field": "last_modified",	"title": "Modified"},
					{"field": "last_modified_by","title": "Modified By"},
					{"field": "created_on",		"title": "Created"},
					{"field": "version",		"title": "Version"}
			]
	});
}

function getDocs2(){
	$.ajax({
		url: 'getDocs.jsp?path='+_path,
		type:"get",
		dataType : "json",
		success : function(result){
			if(result.length>0){
				vzTable("tblGetDocs",result);
				$("#tblGetDocs").dataTable();
				
				$("#tblGetDocs").find("div.panel-heading-controls").hide();
				
				$("#tblGetDocs tr").hover(
						function(){
							$(this).find("div.panel-heading-controls").show();
						},
						function(){
							$(this).find("div.panel-heading-controls").hide();
						}
				);
			}else{
				$("#tblGetDocs").find('thead').remove();
				$("#tblGetDocs").find('tbody').append("<tr><td>There are no documents in this view.</td></tr>");
			}
		},
		error:function(e){
			
		}
	});
		
	//url: 'getDocs.jsp?d='+new Date().getTime(),
	
}



$(document).ready(function(){
	window.PixelAdmin.start(init);

	//getDocs();
	
	$('input#upload-btn').pixelFileInput({ placeholder: 'No file selected...' });
	
	function init() {
		document.getElementById('file_upload_form').onsubmit=function() {
			document.getElementById('file_upload_form').target = 'upload_target'; //'upload_target' is the name of the iframe
		}
	}
	window.onload=init;
	
	/*$('#btnUploadModalSubmit').on('click', function () {
		
		alert("inside");
		$('input#upload-btn').ajaxfileupload({
			  'action' : '/pixel-mw/UploadServlet',
			  'onComplete' : function(response) {
			      $('#upload').hide();
			      $('#message').show();
			      var statusVal = JSON.stringify(response.status);
			     if(statusVal == "false")
			     {
			    	 $("#message").html("<font color='red'>"+JSON.stringify(response.message)+"</font>");
			     }  
			     if(statusVal == "true")
			     {
			    	 $("#message").html("<font color='green'>"+JSON.stringify(response.message)+"</font>");
			     }                  
			},
			'onStart' : function() {
			        $('#upload').show();
			        $('#message').hide();
			}
		});
	});*/
	
	$(document).on('change', '.file', function(){
			alert("test");
		  
		});
	
	
	
	getDocs2();
    //var myHilitor = new Hilitor("divContent");
	//myHilitor.apply("Kumar");
	
	
	$('#linkCreateFolder').on('click', function () {
		bootbox.prompt({
			title: "Create a new folder",
			callback: function(result) {
				if (result === null) {                                             
					//Cancelled                              
				} else {
					$('html,body').animate({ scrollTop: 0 }, 500);
					var options = {
						type: 'success',
						namespace: 'pa_page_alerts_default'
					};
					options['auto_close'] = 5; // seconds
					PixelAdmin.plugins.alerts.add("<i class=\"fa fa-check-circle\"></i> '"+ result +"' folder has been created successfully!", options);
				}
			},
			className: "bootbox-sm"
		});
	});
	
	

	$('#linkUpload').click(function(){
		$('#divUploadModal').modal('show');
		/*
	  	$('.modal-body').empty();
	  	var title = $(this).parent('a').attr("title");
	  	$('.modal-title').html(title);
	  	$($('#upload-form').html()).appendTo('.modal-body');
	  	$('#myModal').modal({show:true});
	  	*/
	});
	
	$('input#upload-btn').pixelFileInput({ placeholder: 'No file selected...' });
	
	$('#btnUploadModalSubmit').on('click', function () {
		$('input#upload-btn').ajaxfileupload({
			  'action' : '/pixel-mw/UploadServlet',
			  'onComplete' : function(response) {
			      $('#upload').hide();
			      $('#message').show();
			      var statusVal = JSON.stringify(response.status);
			     if(statusVal == "false")
			     {
			    	 $("#message").html("<font color='red'>"+JSON.stringify(response.message)+"</font>");
			     }  
			     if(statusVal == "true")
			     {
			    	 $("#message").html("<font color='green'>"+JSON.stringify(response.message)+"</font>");
			     }                  
			},
			'onStart' : function() {
			        $('#upload').show();
			        $('#message').hide();
			}
		});
	});
	

});


var strSearchTemplate = "<div class=\"panel\" id='div_SNO_'><div class=\"panel-body\"><div><a href=\"#\" rel=\"_ID_\"><span class='_TYPE_'></span>_NAME_</a></div><div>_CONTENT_</div><div>_PATH_</div></div></div></div>";
function searchResults(frm){
	//Hide the table container
	$("#divContentContainer, #divCreate, #divUpload").hide();
	$(frm).css("float","left");
	$("#divSearchResultsLoading").show();
	
	$.ajax({
		url : "searched.jsp?d=" + new Date().getTime(),
		type:"get",
		dataType : "json",
		success : function(result){
			var strOut="";
			for(var i=0; i<result.length; i++){
				var strTemp = strSearchTemplate;
				strTemp=strTemp.replace("_SNO_",i);
				strTemp=strTemp.replace("_NAME_",result[i]["name"]);
				strTemp=strTemp.replace("_CONTENT_",result[i]["content"]);
				strTemp=strTemp.replace("_PATH_",result[i]["path"]);
				strTemp=strTemp.replace("_ID_",result[i]["id"]);
				strTemp=strTemp.replace("_TYPE_",result[i]["type"]);
				$("#divSearchResults").append(strTemp);
			}
			
			$("#divSearchResultsLoading").hide();
			
			//highlight func
			
		},
		error:function(e){
			//$("#divSearchResults").before().remove();
		}
	});
	return false;
}

function traceErr(msg) {
    $("#divDebug").append("<br /><span style=\"color:#" + Math.floor(Math.random() * 999999) + ";\">" + msg + "</span>");
    if (getCurrentPath().indexOf("localhost:") > 0) $("#divDebug").show(); else $("#divDebug").hide();
}
function getCurrentPath() {
    var strURL = window.location.href;
    var params = "";
    if (strURL.indexOf("?") != -1) {
        params = strURL.substring(strURL.indexOf("?") + 1, strURL.length);
        strURL = strURL.substring(0, strURL.indexOf("?"));
    }
    return strURL.substring(0, strURL.lastIndexOf("/") + 1);
}
function toTitleCase(str)
{
    return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
}

function vzTable(tableID,json){
	var rowTemplate="<tr><td><i class=\"menu-icon fa _TYPE_\"></i></td><td class='cellName'><a href=\"_URL_\" rel=\"_ID_\">_NAME_</a>_PROP_</td><td>_MODIFIED_</td><td>_MODIFIEDBY_</td><td>_CREATED_</td></tr>";
	var row="";
	var rows="";
	if(json.length>0){
        for (var i = 0; i < json.length; i++) {
        	row=rowTemplate;
        	row=row.replace("_SNO_",i+1);
        	switch(json[i]["type"]){
        		case "folder":
        			row=row.replace("_TYPE_","fa-folder-o");
                	row=row.replace("_URL_","index.jsp?path="+_path + "/" + json[i]["name"]);
        			break;
				case "xlsx":
        		case "xls":
        			row=row.replace("_TYPE_","fa-file-excel-o");
        			break;
        		case "docx":
        		case "doc":
        			row=row.replace("_TYPE_","fa-file-word-o");
        			break;
        		default:
        			
        			row=row.replace("_TYPE_","fa-file-o");
        			//row=row.replace("_TYPE_","fa-file-text-o");
        			break;
        	}
        	row=row.replace("_URL_","javascript:void(0);");
        	row=row.replace("_ID_",json[i]["id"]);
        	row=row.replace("_NAME_",json[i]["name"]);
        	row=row.replace("_MODIFIED_",json[i]["last_modified"]);
        	row=row.replace("_MODIFIEDBY_",json[i]["last_modified_by"]);
        	row=row.replace("_CREATED_",json[i]["created_on"]);
        	
        	var propHTML = "<div id='divProp_"+json[i]["id"]+"' class='panel-heading-controls'><button rel='"+json[i]["id"]+"' class='btn btn-sm btn-default btn-outline'><span class='fa fa-file-text-o'></span></button><button rel='"+json[i]["id"]+"' class='btn btn-sm btn-default btn-outline'><span class='fa fa-pencil fa-fw'></span></button><button rel='"+json[i]["id"]+"' class='btn btn-xs btn-danger btn-outline'><span class='fa fa fa-trash-o fa-fw'></span></button><button rel='"+json[i]["id"]+"' class='btn btn-xs btn-default btn-outline'><span class='fa fa-lock'></span></button></div>";
        	
			row=row.replace("_PROP_",propHTML);
        	rows+=row;
        }
	    $("#" + tableID).find('tbody').append(rows);
	}
}